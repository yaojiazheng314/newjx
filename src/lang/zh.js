export default {
  route: {
		首页: '首页',
		信息管理: '信息管理',
		院属: '院属',
		科室信息: '科室信息',
		人员信息: '人员信息',
		职位管理: '职位管理',
		职称管理: '职称管理',
		核算配置: '核算配置',
		核算因子: '核算因子',
		核算权重: '核算权重',
		核算公式: '核算公式',
		因子数据: '因子数据',
		手动填报: '手动填报',
		接口导入: '接口导入',
		考核导入: '考核导入',
		月度核算: '月度核算',
		科室核算: '科室核算',
		人员核算: '人员核算',
		终审封账: '终审封账',
		反馈分配: '反馈分配',
		分配配置: '分配配置',
		垂直管理: '垂直管理',
		绩效发放: '绩效发放',
		分配填报: '分配填报',
		反馈审核: '反馈审核',
		用户权限: '用户权限',
		用户信息: '用户信息',
		权限管理: '权限管理',
		考核管理: '考核管理',
		指标依据: '指标依据',
    模板配置: '模板配置',
    质控考核: '质控考核',
		考核上报: '考核上报',
		上报审核: '上报审核',
		目标管理: '目标管理',
		目标配置: '目标配置',
		目标执行: '目标执行',
		监控审核: '监控审核',
		全局进度: '全局进度',
		外链平台: '外链平台',
		链接配置: '链接配置',
		报表管理: '报表管理',
		数据挖掘: '数据挖掘',
		业务分析: '业务分析',
		临床查询: '临床查询',
		机关查询: '机关查询',
		财务审核: '财务审核',
		接口通道: '接口通道',
		服务连接: '服务连接',
		接口配置: '接口配置',
		接口执行: '接口执行',
    医保结算: '医保结算',
		数据绑定: '数据绑定',
		科室绑定: '科室绑定',
		人员绑定: '人员绑定',
		收费类别: '收费类别',
		收费项目: '收费项目',
    运营监控: '运营监控',
    科室收入: '科室收入',
    科室成本: '科室成本',
    核算分析: '核算分析',
    运营分析: '运营分析',
		数据调整: '数据调整',
		收入调整: '收入调整',
		收入调整审核: '收入调整审核',
		成本调整: '成本调整',
		成本调整审核: '成本调整审核',
		报表平台: '报表平台',
		绩效分析: '绩效分析',
		接口设置: '接口设置',
		基础对照: '基础对照',
		科室对照: '科室对照',
		人员对照: '人员对照',
		成本类别: '成本类别'
  },
  navbar: {
    logOut: '退出登录',
    dashboard: '首页',
    github: '项目地址',
    screenfull: '全屏',
    theme: '换肤',
    size: '布局大小'
  },
  login: {
    title: '系统登录',
    logIn: '登录',
    username: '账号',
    password: '密码',
    any: '随便填',
    thirdparty: '第三方登录',
    thirdpartyTips: '本地不能模拟，请结合自己业务进行模拟！！！'
  },
  documentation: {
    documentation: '文档',
    github: 'Github 地址'
  },
  permission: {
    roles: '你的权限',
    switchRoles: '切换权限',
    tips: '在某些情况下，不适合使用 v-permission。例如：Element-UI 的 Tab 组件或 el-table-column 以及其它动态渲染 dom 的场景。你只能通过手动设置 v-if 来实现。'
  },
  guide: {
    description: '引导页对于一些第一次进入项目的人很有用，你可以简单介绍下项目的功能。本 Demo 是基于',
    button: '打开引导'
  },
  components: {
    documentation: '文档',
    tinymceTips: '富文本是管理后台一个核心的功能，但同时又是一个有很多坑的地方。在选择富文本的过程中我也走了不少的弯路，市面上常见的富文本都基本用过了，最终权衡了一下选择了Tinymce。更详细的富文本比较和介绍见',
    stickyTips: '当页面滚动到预设的位置会吸附在顶部',
    backToTopTips1: '页面滚动到指定位置会在右下角出现返回顶部按钮',
    backToTopTips2: '可自定义按钮的样式、show/hide、出现的高度、返回的位置 如需文字提示，可在外部使用Element的el-tooltip元素',
  },
  table: {
    dynamicTips1: '固定表头, 按照表头顺序排序',
    dynamicTips2: '不固定表头, 按照点击顺序排序',
    dragTips1: '默认顺序',
    dragTips2: '拖拽后顺序',
    title: '标题',
    importance: '重要性',
    type: '类型',
    remark: '点评',
    search: '搜索',
    add: '添加',
    export: '导出',
    reviewer: '审核人',
    id: '序号',
    date: '时间',
    author: '作者',
    readings: '阅读数',
    status: '状态',
    actions: '操作',
    edit: '编辑',
    publish: '发布',
    draft: '草稿',
    delete: '删除',
    cancel: '取 消',
    confirm: '确 定'
  },
  errorLog: {
    tips: '请点击右上角bug小图标',
    description: '现在的管理后台基本都是spa的形式了，它增强了用户体验，但同时也会增加页面出问题的可能性，可能一个小小的疏忽就导致整个页面的死锁。好在 Vue 官网提供了一个方法来捕获处理异常，你可以在其中进行错误处理或者异常上报。',
    documentation: '文档介绍'
  },
  excel: {
    export: '导出',
    selectedExport: '导出已选择项',
    placeholder: '请输入文件名(默认excel-list)'
  },
  zip: {
    export: '导出',
    placeholder: '请输入文件名(默认file)'
  },
  pdf: {
    tips: '这里使用   window.print() 来实现下载pdf的功能'
  },
  theme: {
    change: '换肤',
    documentation: '换肤文档',
    tips: 'Tips: 它区别于 navbar 上的 theme-pick, 是两种不同的换肤方法，各自有不同的应用场景，具体请参考文档。'
  },
  tagsView: {
    refresh: '刷新',
    close: '关闭',
    closeOthers: '关闭其它',
    closeAll: '全部关闭'
  },
	settings: {
	  title: '系统布局配置',
	  theme: '主题色',
	  tagsView: '开启 Tags-View',
	  fixedHeader: '固定 Header',
	  sidebarLogo: '侧边栏 Logo'
	}
}
